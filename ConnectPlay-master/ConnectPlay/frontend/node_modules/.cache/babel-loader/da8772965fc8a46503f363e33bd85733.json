{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srinivas\\\\Downloads\\\\ConnectPlay-master\\\\ConnectPlay-master\\\\ConnectPlay\\\\frontend\\\\src\\\\pages\\\\EditGame1.js\",\n    _s = $RefreshSig$();\n\nimport { Col, Row, Form, Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DefaultLayout1 from \"../components/DefaultLayout1\";\nimport Spinner from \"../components/Spinner\";\nimport { addGame1, editGame1, getAllGames1 } from \"../redux/actions/gamesActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditGame1(_ref) {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const {\n    games\n  } = useSelector(state => state.gamesReducer1);\n  const dispatch = useDispatch();\n  const {\n    loading\n  } = useSelector(state => state.alertsReducer1);\n  const [game, setgame] = useState();\n  const [totalgames, settotalgames] = useState([]);\n  useEffect(() => {\n    if (games.length == 0) {\n      dispatch(getAllGames1());\n    } else {\n      settotalgames(games);\n      setgame(games.find(o => o._id == match.params.gameid));\n      console.log(game);\n    }\n  }, [games]);\n\n  function onFinish(values) {\n    values._id = game._id;\n    dispatch(editGame1(values));\n    console.log(values);\n  }\n\n  return /*#__PURE__*/_jsxDEV(DefaultLayout1, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 12,\n        sm: 24,\n        xs: 24,\n        className: \"p-2\",\n        children: totalgames.length > 0 && /*#__PURE__*/_jsxDEV(Form, {\n          initialValues: game,\n          className: \"bs1 p-2\",\n          layout: \"vertical\",\n          onFinish: onFinish,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"name\",\n            label: \"Game name\",\n            rules: [{\n              required: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"image\",\n            label: \"Image url\",\n            rules: [{\n              required: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"rentPerHour\",\n            label: \"Cost per hour\",\n            rules: [{\n              required: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"capacity\",\n            label: \"Capacity\",\n            rules: [{\n              required: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"fuelType\",\n            label: \"Game Mode\",\n            rules: [{\n              required: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-right\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn1\",\n              children: \"Edit GAME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditGame1, \"iklX7PjsWxsrUXGDal0jx4YxBck=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = EditGame1;\nexport default EditGame1;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditGame1\");","map":{"version":3,"sources":["C:/Users/srinivas/Downloads/ConnectPlay-master/ConnectPlay-master/ConnectPlay/frontend/src/pages/EditGame1.js"],"names":["Col","Row","Form","Input","React","useEffect","useState","useDispatch","useSelector","DefaultLayout1","Spinner","addGame1","editGame1","getAllGames1","EditGame1","match","games","state","gamesReducer1","dispatch","loading","alertsReducer1","game","setgame","totalgames","settotalgames","length","find","o","_id","params","gameid","console","log","onFinish","values","required"],"mappings":"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","sourcesContent":["import { Col, Row, Form, Input } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DefaultLayout1 from \"../components/DefaultLayout1\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { addGame1, editGame1, getAllGames1 } from \"../redux/actions/gamesActions\";\r\nfunction EditGame1({ match }) {\r\n  const { games } = useSelector((state) => state.gamesReducer1);\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.alertsReducer1);\r\n  const [game, setgame] = useState();\r\n  const [totalgames, settotalgames] = useState([]);\r\n  useEffect(() => {\r\n    if (games.length == 0) {\r\n      dispatch(getAllGames1());\r\n    } else {\r\n      settotalgames(games);\r\n      setgame(games.find((o) => o._id == match.params.gameid));\r\n      console.log(game);\r\n    }\r\n  }, [games]);\r\n\r\n  function onFinish(values) {\r\n    values._id = game._id;\r\n\r\n    dispatch(editGame1(values));\r\n    console.log(values);\r\n  }\r\n\r\n  return (\r\n    <DefaultLayout1>\r\n      {loading && <Spinner />}\r\n      <Row justify=\"center mt-5\">\r\n        <Col lg={12} sm={24} xs={24} className='p-2'>\r\n          {totalgames.length > 0 && (\r\n            <Form\r\n              initialValues={game}\r\n              className=\"bs1 p-2\"\r\n              layout=\"vertical\"\r\n              onFinish={onFinish}\r\n            >\r\n              <h3>Edit Game</h3>\r\n\r\n              <hr />\r\n              <Form.Item\r\n                name=\"name\"\r\n                label=\"Game name\"\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"image\"\r\n                label=\"Image url\"\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"rentPerHour\"\r\n                label=\"Cost per hour\"\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"capacity\"\r\n                label=\"Capacity\"\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"fuelType\"\r\n                label=\"Game Mode\"\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <div className=\"text-right\">\r\n                <button className=\"btn1\">Edit GAME</button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </DefaultLayout1>\r\n  );\r\n}\r\n\r\nexport default EditGame1;"]},"metadata":{},"sourceType":"module"}